plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java.srcDir('build/generated/sources/main')
        resources {
            exclude('expressions.flex')
        }
    }
}

configurations {
    jflex {
        extendsFrom implementation
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    implementation 'de.jflex:jflex:1.8.2'
    // implementation 'de.jflex:cup_runtime:11b'
    // implementation 'edu.princeton.cup:java-cup:10k'

    // api 'org.apache.commons:commons-math3:3.6.1'
    // implementation 'com.google.guava:guava:30.1.1-jre'
}

tasks.register('jflex', JavaExec) {
    it.group('build')
    def outDir = sourceSets.main.java.srcDirs.stream()
            .filter(e -> e.toString().contains('generated'))
            .findAny().orElseThrow()
    it.getInputs().dir('src/main/java')
    it.getInputs().dir('src/main/resources')
    it.getOutputs().dir(outDir)

    it.classpath(configurations.jflex.asPath)
    it.main('jflex.Main')
    it.args('-d')
    it.args(outDir)
    it.args(sourceSets.main.resources.collect())
}

tasks.compileJava.dependsOn('jflex')

tasks.register('helloworld') {
    it.group('build')
    it.doLast {
        println(sourceSets.main.java.srcDirs.stream().findAny().orElseThrow())
        // println(configurations.jflex.asPath)
        // println(sourceSets.jflex.resources.collect())
    }
}

tasks.withType(Test) { t -> t.useJUnitPlatform() }
